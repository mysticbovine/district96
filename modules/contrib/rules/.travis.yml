os: linux

language: php

dist: xenial

env:
  global:
    # Make the script re-usable for other modules.
    - MODULE=rules
    # Initialise the real SYMFONY_DEPRECATIONS_HELPER variable.
    - SYMFONY_DEPRECATIONS_HELPER=0
    # Create a default for the allowed deprecations per branch.
    - DEPRECATIONS=0

jobs:
  fast_finish: true
  include:
    - php: 7.1
      env: DRUPAL_CORE=8.8.x
    - php: 7.2
      env: DRUPAL_CORE=8.9.x
    - php: 7.3
      env: DRUPAL_CORE=9.0.x
    - php: 7.4
      env:
        - DRUPAL_CORE=9.1.x
        # --- Remaining self deprecation notices (0)
        # --- Remaining direct deprecation notices (781)
        #  50 Support for keys without a placeholder prefix is deprecated
        # 516 EventDispatcher parameters
        #  13 UnitTestCase::assertArrayEquals() is deprecated
        # 202 Drupal\Core\Plugin\ContextAwarePluginBase
        - DEPRECATIONS=781

services:
  - mysql

# Be sure to cache composer downloads.
cache:
  directories:
    - $HOME/.composer

before_script:
  - echo $MODULE

  # Remove Xdebug as we don't need it and it causes
  # PHP Fatal error:  Maximum function nesting level of '256' reached.
  # We also don't care if that file exists or not on PHP 7.
  - phpenv config-rm xdebug.ini || true

  # Save the current $MODULE test directory for use in the Drupal installation.
  - TESTDIR=$(pwd)
  # Navigate out to prevent blown stack by recursive module lookup.
  - cd ..

  # Create database.
  - mysql -e "create database $MODULE"
  # Export database variable for kernel tests.
  - export SIMPLETEST_DB=mysql://root:@127.0.0.1/$MODULE
  # Download Drupal 8 core from the Github mirror because it is faster.
  - travis_retry git clone --branch $DRUPAL_CORE --depth 1 https://github.com/drupal/drupal.git
  - cd drupal
  # Store the path to Drupal root.
  - DRUPAL_ROOT=$(pwd)
  - echo $DRUPAL_ROOT

  # Reference $MODULE in build site.
  - ln -s $TESTDIR modules/$MODULE
  # Install dependencies.
  - travis_retry git clone --branch 8.x-1.x --depth 1 https://git.drupalcode.org/project/typed_data.git modules/typed_data

  # At job start-up Composer is installed at 1.8.4 then self-update is run. From
  # 24 October 2020 this bumped the version to Composer 2. Drupal Core 8.8 has
  # plugins that only run with composer-plugin-api ^1.0 so revert to Composer 1.
  - if [ "$DRUPAL_CORE" == "8.8.x" ]; then
      travis_retry composer self-update --1;
    fi
  - travis_retry composer install

  # Set the phpcs installed_paths to pick up the Drupal standards.
  - $DRUPAL_ROOT/vendor/bin/phpcs --config-set installed_paths $DRUPAL_ROOT/vendor/drupal/coder/coder_sniffer

  # Show the allowed number of deprecation warnings.
  - echo $SYMFONY_DEPRECATIONS_HELPER

  # Start a web server on port 8888, run in the background.
  - php -S localhost:8888 &

  # Export web server URL for browser tests.
  - export SIMPLETEST_BASE_URL=http://localhost:8888

  # Get the allowed number of deprecation warnings for this branch.
  - SYMFONY_DEPRECATIONS_HELPER=$DEPRECATIONS || $SYMFONY_DEPRECATIONS_HELPER
  - echo $SYMFONY_DEPRECATIONS_HELPER

script:
  # Run the PHPUnit tests which also include the kernel tests.
  - ./vendor/bin/phpunit -c ./core/phpunit.xml.dist ./modules/$MODULE/tests/

  # Check for coding standards. First change directory to our module.
  - cd $DRUPAL_ROOT/modules/$MODULE

  # Show the phpcs version, standards and all the sniffs that are used.
  - $DRUPAL_ROOT/vendor/bin/phpcs --version
  - $DRUPAL_ROOT/vendor/bin/phpcs -i
  - $DRUPAL_ROOT/vendor/bin/phpcs -e

  # Show the violations in detail but do not fail for any errors or warnings.
  - $DRUPAL_ROOT/vendor/bin/phpcs --report-width=100 --runtime-set ignore_warnings_on_exit 1 --runtime-set ignore_errors_on_exit 1

  # Run again to give a summary and totals, and fail for errors and warnings.
  - $DRUPAL_ROOT/vendor/bin/phpcs --report-width=100 --report=summary
