diff --git a/calendar/calendar.module b/calendar/calendar.module
index 3697935..713fd95 100644
--- a/calendar/calendar.module
+++ b/calendar/calendar.module
@@ -260,3 +260,58 @@ function calendar_granularity_path(ViewExecutable &$view, $granularity) {
   }
   return $paths[$view->id()][$granularity];
 }
+
+/**
+ * Implements hook_views_query_alter().
+ */
+function calendar_views_query_alter($view, $query) {
+
+  // If timezone offset is enabled, alter query to accordingly.
+  if (\Drupal::config('calendar.settings')->get('timezone_offset')) {
+
+    // Loop through statements in this query.
+    foreach ($query->where as $statement_key => $statement) {
+
+      // If view style plugin is calendar...
+      if ($view->style_plugin->getPluginId() == 'calendar') {
+
+        // Loop through conditions within this statement.
+        foreach ($statement['conditions'] as $condition_key => $condition) {
+
+          // If this condition is a formula...
+          if ($condition['operator'] == 'formula') {
+
+            // If this condition formula uses the date format function...
+            if (strpos($condition['field'], 'DATE_FORMAT') !== false) {
+
+              // Retrieve this condition's current field value for modification.
+              $condition_field = $query->where[$statement_key]['conditions'][$condition_key]['field'];
+
+              // Split condition field into parts.
+              $condition_field_parts = array_map('trim', explode('=', $condition_field));
+
+              // If the split returned 2 parts, as expected...
+              if (count($condition_field_parts) == 2) {
+
+                // Modify query to include records from the next month and year.
+                $condition_field_parts[1] = '(' . $condition_field_parts[1] . ',' . $condition_field_parts[1] . ' + 1, ' . $condition_field_parts[1] . ' + 89)';
+                $condition_field = implode(' IN ', $condition_field_parts);
+
+              }
+
+              // Substitute the original field value for the modified one.
+              $query->where[$statement_key]['conditions'][$condition_key]['field'] = $condition_field;
+
+            }
+
+          }
+
+        }
+
+      }
+
+    }
+
+  }
+
+}
diff --git a/calendar/config/install/calendar.settings.yml b/calendar/config/install/calendar.settings.yml
index eaf03f1..91102da 100644
--- a/calendar/config/install/calendar.settings.yml
+++ b/calendar/config/install/calendar.settings.yml
@@ -1,2 +1,3 @@
 track_date: 0
 add_colorbox: 0
+timezone_offset: 0
diff --git a/calendar/src/Form/CalendarSettingsForm.php b/calendar/src/Form/CalendarSettingsForm.php
index 4379585..319c0ec 100644
--- a/calendar/src/Form/CalendarSettingsForm.php
+++ b/calendar/src/Form/CalendarSettingsForm.php
@@ -63,6 +63,17 @@ class CalendarSettingsForm extends ConfigFormBase {
       '#description' => $this->t('To try the Colorbox settings, choose the option to add Colorbox settings to the calendar templates. Install and enable the Colorbox module, following the instructions on the Colorbox project page, then create a new calendar from a template using any date field in the Node base table. The calendar will be set up to display the calendar items in a Colorbox.'),
     ];
 
+    $form['calendar_settings']['timezone_offset'] = [
+      '#type' => 'radios',
+      '#title' => $this->t('Use timezone offset'),
+      '#default_value' => $calendar_config->get('timezone_offset'),
+      '#options' => [
+        0 => $this->t('No'),
+        1 => $this->t('Yes'),
+      ],
+      '#description' => $this->t('By default, calendar views display items based on UTC. This setting will offset events based on the user\'s timezone.'),
+    ];
+
     return $form;
   }
 
@@ -75,6 +86,7 @@ class CalendarSettingsForm extends ConfigFormBase {
     $this->config('calendar.settings')
       ->set('track_date', $form_state->getValue('track_date'))
       ->set('add_colorbox', $form_state->getValue('add_colorbox'))
+      ->set('timezone_offset', $form_state->getValue('timezone_offset'))
       ->save();
 
   }
diff --git a/calendar/src/Plugin/views/row/Calendar.php b/calendar/src/Plugin/views/row/Calendar.php
index f04727c..410b712 100644
--- a/calendar/src/Plugin/views/row/Calendar.php
+++ b/calendar/src/Plugin/views/row/Calendar.php
@@ -433,8 +433,16 @@ class Calendar extends RowPluginBase {
 //        $db_tz   = date_get_timezone_db($tz_handling, isset($item->$tz_field) ? $item->$tz_field : timezone_name_get($dateInfo->getTimezone()));
 //        $to_zone = date_get_timezone($tz_handling, isset($item->$tz_field)) ? $item->$tz_field : timezone_name_get($dateInfo->getTimezone());
 
-        $item_start_date = \DateTime::createFromFormat($storage_format, $row->{$info['query_name']});
-        $item_end_date = \DateTime::createFromFormat($storage_format, $row->{$info['query_name']});
+        // If timezone offset is enabled, set start and end dates in UTC.
+        if (\Drupal::config('calendar.settings')->get('timezone_offset')) {
+          $timezone = new \DateTimeZone('UTC');
+          $item_start_date = \DateTime::createFromFormat($storage_format, $row->{$info['query_name']}, $timezone);
+          $item_end_date = \DateTime::createFromFormat($storage_format, $row->{$info['query_name']}, $timezone); 
+        }
+        else {
+          $item_start_date = \DateTime::createFromFormat($storage_format, $row->{$info['query_name']});
+          $item_end_date = \DateTime::createFromFormat($storage_format, $row->{$info['query_name']});          
+        }
 
         // @todo don't hardcode
 //        $granularity = date_granularity_precision($cck_field['settings']['granularity']);